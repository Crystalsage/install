name: Build FLINT AppImage
on:
  push:
    tags:
      - 'v*'

  workflow_dispatch:
    inputs:
      devRelease:
        description: "Is this a dev release?"
        required: true
        type: boolean

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Run the AppImage script
        run: |
          curl "https://raw.githubusercontent.com/Crystalsage/install/main/appimage-scripts/AppImage_FLINT_Build.sh" | bash  
          mv /home/runner/tmp/FLINT/Source/build/FLINT-*.AppImage /home/runner/FLINT-${{ matrix.os }}.AppImage

      - name: Cache artifacts
        uses: actions/cache@v3
        env:
          cache-name: cache-appimages
        with:
          path: /home/runner/FLINT-${{ matrix.os }}.AppImage
          key: ${{ matrix.os }}-appimage

  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/cache@v3
        with:
          path: /home/runner/FLINT-${{ matrix.os }}.AppImage
          key: ${{ matrix.os }}-appimage
          
      - name: Test AppImages
        run: |
          test -f "/home/runner/FLINT-${{ matrix.os }}.AppImage"; 
          echo "All AppImages have been built successfully."

          /home/runner/FLINT-${{ matrix.os }}.AppImage --appimage-extract
          cd squashfs-root
          curl "https://raw.githubusercontent.com/Crystalsage/install/main/appimage-scripts/test-appimage-artifacts.sh" | bash

  release:
    needs: [build, test]
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@master

      - uses: actions/cache@v3
        with:
          path: /home/runner/FLINT-${{ matrix.os }}.AppImage
          key: ${{ matrix.os }}-appimage

      - name: Create dev release
        if: ${{ inputs.devRelease }}
        uses: ncipollo/release-action@v1
        with: 
          allowUpdates: true
          name: "Dev release"
          tag: "dev"
          prerelease: False
          artifacts: "/home/runner/FLINT-*.AppImage"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create production release
        if: ${{ !inputs.devRelease }}
        uses: ncipollo/release-action@v1
        with: 
          allowUpdates: true
          bodyfile: .github/release.md
          prerelease: False
          artifacts: "/home/runner/FLINT-*.AppImage"
          token: ${{ secrets.GITHUB_TOKEN }}
